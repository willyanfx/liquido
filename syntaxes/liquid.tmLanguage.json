{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "liquid",
    "injectionSelector": "L:text.html -meta.embedded -comment, L:source.css -comment -string -meta.embedded, L:source.js -string.quoted.*.js -comment -string, L:source.jsx -comment -string -string.quoted.*.jsx, L:source.js.jsx -comment -string, L:source.ts -string -comment -string.quoted.*.ts, L:source.json -string.quoted.*.json, text.html.markdown -comment",
    "fileTypes": [
        "html",
        "liquid",
        "jekyll",
        "js",
        "jsx",
        "json",
        "ts",
        "tsx",
        "md",
        "css",
        "scss",
        "sass"
    ],
    "foldingStartMarker": "(?x){%-?\\s*(if|unless|for|paginate|capture|form|case|tablerow|raw|comment|block|paginate|schema|stylesheet|javascript)[^(%})]+-?%}",
    "foldingStopMarker": "(?x){%-?\\s*(endif|endunless|endfor|endpaginate|endcapture|endform|endcase|endtablerow|endraw|endcomment|endblock|endpaginate|endschema|endstylesheet|endjavascript)[^(%})]+-?%}",
    "patterns": [
        {
            "include": "#comment"
        },
        {
            "include": "#keywords"
        },
        {
            "include": "#liquid-template-filter"
        },
        {
            "include": "#strings"
        },
        {
            "include": "#variables"
        },
        {
            "include": "#tags"
        },
        {
            "include": "#schema"
        },
        {
            "include": "#stylesheet"
        },
        {
            "include": "#style"
        },
        {
            "include": "#javascript"
        },
        {
            "include": "#constant-numeric"
        },
        {
            "include": "#constant-characters"
        },

        {
            "include": "#constants"
        }
    ],
    "repository": {
        "keywords": {
            "patterns": [
                {
                    "name": "keyword.operator.logical.liquid",
                    "match": "\\b(and|or|not|contains|(!=|==|<=|>=|<|>))\\b"
                }
            ]
        },
        "variables": {
            "patterns": [
                {
                    "begin": "{{",
                    "end": "}}",
                    "name": "storage.type.variable.liquid",
                    "patterns": [
                        {
                            "include": "#liquid-template-filter"
                        }
                    ],
                    "captures": {
                        "0": {
                            "name": "entity.tag.tagbraces.liquid"
                        }
                    }
                },
                {
                    "name": "support.class.liquid",
                    "match": "\b(assets|author|body|body_raw|current|date|excerpt_raw|meta|next|pages|parent|posts|previous|site|tags|taxonomy|title|url)\b"
                }
            ]
        },
        "tag": {
            "patterns": [
                {
                    "name": "punctuation.tag.liquid",
                    "begin": "{%-?",
                    "end": "-?%}",
                    "beginCaptures": {
                        "1": {
                            "name": "punctuation.definition.tag.begin.liquid"
                        },
                        "2": {
                            "name": "keyword.other.whitespace.liquid"
                        }
                    },
                    "endCaptures": {
                        "1": {
                            "name": "keyword.other.whitespace.liquid"
                        },
                        "2": {
                            "name": "punctuation.definition.tag.end.liquid"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#liquid-template-tags"
                        },
                        {
                            "include": "#frontmatter"
                        },

                        {
                            "include": "#liquid-template-filter"
                        }
                    ]
                }
            ]
        },

        "liquid-template-filter": {
            "patterns": [
                {
                    "match": "(\\|) ?(concat|join|first|last|map|reverse|size|sort|uniq|where|font_face|font_modify|external_video_tag|external_video_url|img_tag|img_url|media_tag|model_viewer_tag|video_tag|money|money_with_currency|money_without_trailing_zeros|money_without_currency|asset_img_url|asset_url|file_img_url|file_url|customer_login_link|global_asset_url|link_to|link_to_vendor|link_to_type|link_to_tag|link_to_add_tag|link_to_add_tag|payment_type_img_url|shopify_asset_url|sort_by|url_for_type|url_for_vendor|within|date|default|default_errors|default_pagination|format_address|highlight|highlight_active|json|placeholder_svg_tag|t|time_tag|weight_with_unit|brightness_difference|color_brightness|color_contrast|color_darken|color_desaturate|color_difference|color_extract|color_lighten|color_mix|color_modify|color_saturate|color_to_rgb|color_to_hsl|color_to_hex|currency_selector|payment_button|payment_type_svg_tag|script_tag|stylesheet_tag|abs|at_least|at_most|ceil|divided_by|floor|minus|plus|round|times|modulo|append|camelcase|capitalize|downcase|escape|handleize|hmac_sha1|hmac_sha256|md5|newline_to_br|pluralize|prepend|remove|remove_first|replace|replace_first|slice|split|strip|lstrip|reverse|rstrip|sha1|sha256|strip_html|strip_newlines|truncate|truncatewords|upcase|url_encode|url_escape|url_param_escape)\\b",
                    "name": "entity.name.function.filter.liquid",
                    "captures": {
                        "1": {
                            "name": "entity.tag.filter-pipe.liquid"
                        },
                        "2": {
                            "name": "keyword.control.filter.liquid"
                        }
                    }
                },
                {
                    "match": "(\\|)([a-zA-Z0-9_]+)\\b",
                    "name": "entity.name.function.filter.liquid",
                    "captures": {
                        "1": {
                            "name": "entity.tag.filter-pipe.liquid"
                        },
                        "2": {
                            "name": "constant.other.filter.liquid"
                        }
                    }
                },
                {
                    "match": ":",
                    "name": "keyword.operator.filter-argument.liquid"
                },
                {
                    "match": "=",
                    "name": "keyword.operator.assignment.liquid"
                },
                {
                    "match": ",",
                    "name": "keyword.operator.argument-separator.liquid"
                },
                {
                    "match": "\\.",
                    "name": "keyword.operator.getter.liquid"
                },
                {
                    "match": "[a-zA-Z0-9_]+",
                    "name": "string.unquoted.tag-string.liquid"
                },
                {
                    "match": "(>=|>|==|!=|<|<=|and|or|is|not|in)",
                    "name": "keyword.operator.condition.liquid"
                }
            ]
        },
        "constant-characters": {
            "name": "constant.character.entity.liquid",
            "match": "(&)([a-zA-Z0-9]+|#[0-9]+|#x[0-9a-fA-F]+)(;)",
            "captures": {
                "1": {
                    "name": "punctuation.definition.entity.html"
                },
                "3": {
                    "name": "punctuation.definition.entity.html"
                }
            }
        },
        "constant-boolean": {
            "name": "constant.language.liquid",
            "match": "(false|true|nil|null|empty|blank)"
        },
        "constant-numeric": {
            "name": "constant.numeric.liquid",
            "match": "(-|\\+)?\\s*[0-9]+(\\.[0-9]+)?"
        },
        "frontmatter": {
            "contentName": "source.yaml",
            "name": "meta.embedded.block.frontmatter.liquid",
            "begin": "---(?=\\s*\\n)",
            "beginCaptures": {
                "0": {
                    "name": "punctuation.definition.tag.begin.liquid"
                }
            },
            "end": "---(?=\\s*\\n)",
            "endCaptures": {
                "0": {
                    "name": "punctuation.definition.tag.end.liquid"
                }
            },
            "patterns": [
                {
                    "include": "source.yaml"
                }
            ]
        },

        "comments": {
            "patterns": [
                {
                    "name": "comment.block.liquid",
                    "begin": "{% comment %}",
                    "end": "{% endcomment %}",
                    "include": "#template_var",
                    "captures": {
                        "0": {
                            "name": "punctuation.definition.comment.liquid"
                        }
                    },
                    "patterns": [
                        {
                            "match": "{% comment %}",
                            "name": "invalid.illegal.characters-not-allowed-here.liquid"
                        },
                        {
                            "match": "{% comment %}|{% endcomment %}",
                            "name": "invalid.illegal.characters-not-allowed-here.liquid"
                        },
                        {
                            "match": "{% endcomment %}",
                            "name": "invalid.illegal.characters-not-allowed-here.liquid"
                        }
                    ]
                }
            ]
        },
        "schema": {
            "name": "meta.embedded.block.liquid",
            "contentName": "meta.embedded.block.schema.liquid",
            "begin": "({%)\\s+(schema)\\s+(%})",
            "beginCaptures": {
                "1": {
                    "name": "punctuation.definition.tag.begin.liquid"
                },
                "2": {
                    "name": "entity.name.tag.liquid"
                },
                "3": {
                    "name": "punctuation.definition.tag.end.liquid"
                }
            },
            "end": "({%)\\s+(endschema)\\s+(%})",
            "endCaptures": {
                "1": {
                    "name": "punctuation.definition.tag.begin.liquid"
                },
                "2": {
                    "name": "entity.name.tag.liquid"
                },
                "3": {
                    "name": "punctuation.definition.tag.end.liquid"
                }
            },
            "patterns": [
                {
                    "include": "source.json"
                }
            ]
        },
        "stylesheet": {
            "name": "meta.embedded.block.liquid",
            "contentName": "meta.embedded.block.stylesheet.liquid",
            "begin": "({%)\\s+(stylesheet)\\s+(%})",
            "beginCaptures": {
                "1": {
                    "name": "punctuation.definition.tag.begin.liquid"
                },
                "2": {
                    "name": "entity.name.tag.liquid"
                },
                "3": {
                    "name": "punctuation.definition.tag.end.liquid"
                }
            },
            "end": "({%)\\s+(endstylesheet)\\s+(%})",
            "endCaptures": {
                "1": {
                    "name": "punctuation.definition.tag.begin.liquid"
                },
                "2": {
                    "name": "entity.name.tag.liquid"
                },
                "3": {
                    "name": "punctuation.definition.tag.end.liquid"
                }
            },
            "patterns": [
                {
                    "include": "source.css"
                }
            ]
        },
        "style": {
            "name": "meta.embedded.block.liquid",
            "contentName": "meta.embedded.block.style.liquid",
            "begin": "({%)\\s+(style)\\s+(%})",
            "beginCaptures": {
                "1": {
                    "name": "punctuation.definition.tag.begin.liquid"
                },
                "2": {
                    "name": "entity.name.tag.liquid"
                },
                "3": {
                    "name": "punctuation.definition.tag.end.liquid"
                }
            },
            "end": "({%)\\s+(endstyle)\\s+(%})",
            "endCaptures": {
                "1": {
                    "name": "punctuation.definition.tag.begin.liquid"
                },
                "2": {
                    "name": "entity.name.tag.liquid"
                },
                "3": {
                    "name": "punctuation.definition.tag.end.liquid"
                }
            },
            "patterns": [
                {
                    "include": "source.css"
                }
            ]
        },
        "javascript": {
            "name": "meta.embedded.block.liquid",
            "contentName": "meta.embedded.block.javascript.liquid",
            "begin": "({%)\\s+(javascript)\\s+(%})",
            "beginCaptures": {
                "1": {
                    "name": "punctuation.definition.tag.begin.liquid"
                },
                "2": {
                    "name": "entity.name.tag.liquid"
                },
                "3": {
                    "name": "punctuation.definition.tag.end.liquid"
                }
            },
            "end": "({%)\\s+(endjavascript)\\s+(%})",
            "endCaptures": {
                "1": {
                    "name": "punctuation.definition.tag.begin.liquid"
                },
                "2": {
                    "name": "entity.name.tag.liquid"
                },
                "3": {
                    "name": "punctuation.definition.tag.end.liquid"
                }
            },
            "patterns": [
                {
                    "include": "source.js"
                }
            ]
        }
    },

    "scopeName": "source.liquid"
}
